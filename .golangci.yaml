# Options for analysis running.
run:
  # The default concurrency value is the number of available CPU.
  # concurrency: 4
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 5m
  # Exit code when at least one issue was found.
  # Default: 1
  # issues-exit-code: 2
  # Include test files or not.
  # Default: true
  tests: false
  # List of build tags, all linters use it.
  # Default: [].
  # build-tags:
  #   - mytag
  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path,
  # including the path prefix if one is set.
  # Default value is empty list,
  # but default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # skip-dirs:
  #   - gofish/dell
  # # Enables skipping of directories:
  # # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # # Default: true
  # skip-dirs-use-default: false
  # Which files to skip: they will be analyzed, but issues from them won't be reported.
  # Default value is empty list,
  # but there is no need to include all autogenerated files,
  # we confidently recognize autogenerated files.
  # If it's not please let us know.
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # skip-files:
  #   - ".*\\.my\\.go$"
  #   - lib/bad.go
  # If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # By default, it isn't set.
  # modules-download-mode: readonly
  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  # allow-parallel-runners: false
  # Define the Go version limit.
  # Mainly related to generics support since go1.18.
  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.18
  # go: '1.19'

linters-settings:
  errcheck:
    # List of functions to exclude from checking, where each entry is a single function to exclude.
    # See https://github.com/kisielk/errcheck#excluding-functions for details.
    exclude: errcheckexcludes.txt
  staticcheck:
    # SAxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # SA1019: d.GetOkExists is deprecated, ignoring now since we shall be moving to plugin framework soon
    checks: ["all", "-SA1019"]
  revive:
    rules:
      - name: unused-parameter
        severity: warning
        disabled: true
      - name: var-declaration
        severity: warning
        disabled: true
      - name: exported
        disabled: false

# enable revive linter
linters:
  enable:
    - revive

issues:
    exclude: 
      - SA1019 # SA1019 static check: 
#   include:
#     - EXC0012  # EXC0012 revive: Annoying issue about not having a comment. The rare codebase has such comments
#     - EXC0014  # EXC0014 revive: Annoying issue about not having a comment. The rare codebase has such comments